// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProductType extends pulumi.CustomResource {
    /**
     * Get an existing ProductType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProductTypeState, opts?: pulumi.CustomResourceOptions): ProductType {
        return new ProductType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'commercetools:index/productType:ProductType';

    /**
     * Returns true if the given object is an instance of ProductType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProductType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProductType.__pulumiType;
    }

    public readonly attributes!: pulumi.Output<outputs.ProductTypeAttribute[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly key!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a ProductType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProductTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProductTypeArgs | ProductTypeState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ProductTypeState | undefined;
            inputs["attributes"] = state ? state.attributes : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ProductTypeArgs | undefined;
            inputs["attributes"] = args ? args.attributes : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ProductType.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProductType resources.
 */
export interface ProductTypeState {
    readonly attributes?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttribute>[]>;
    readonly description?: pulumi.Input<string>;
    readonly key?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ProductType resource.
 */
export interface ProductTypeArgs {
    readonly attributes?: pulumi.Input<pulumi.Input<inputs.ProductTypeAttribute>[]>;
    readonly description?: pulumi.Input<string>;
    readonly key?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
}
