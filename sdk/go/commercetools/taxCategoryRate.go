// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TaxCategoryRate struct {
	pulumi.CustomResourceState

	Amount          pulumi.Float64PtrOutput           `pulumi:"amount"`
	Country         pulumi.StringOutput               `pulumi:"country"`
	IncludedInPrice pulumi.BoolOutput                 `pulumi:"includedInPrice"`
	Name            pulumi.StringOutput               `pulumi:"name"`
	State           pulumi.StringPtrOutput            `pulumi:"state"`
	SubRates        TaxCategoryRateSubRateArrayOutput `pulumi:"subRates"`
	TaxCategoryId   pulumi.StringOutput               `pulumi:"taxCategoryId"`
}

// NewTaxCategoryRate registers a new resource with the given unique name, arguments, and options.
func NewTaxCategoryRate(ctx *pulumi.Context,
	name string, args *TaxCategoryRateArgs, opts ...pulumi.ResourceOption) (*TaxCategoryRate, error) {
	if args == nil || args.Country == nil {
		return nil, errors.New("missing required argument 'Country'")
	}
	if args == nil || args.IncludedInPrice == nil {
		return nil, errors.New("missing required argument 'IncludedInPrice'")
	}
	if args == nil || args.TaxCategoryId == nil {
		return nil, errors.New("missing required argument 'TaxCategoryId'")
	}
	if args == nil {
		args = &TaxCategoryRateArgs{}
	}
	var resource TaxCategoryRate
	err := ctx.RegisterResource("commercetools:index/taxCategoryRate:TaxCategoryRate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaxCategoryRate gets an existing TaxCategoryRate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaxCategoryRate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaxCategoryRateState, opts ...pulumi.ResourceOption) (*TaxCategoryRate, error) {
	var resource TaxCategoryRate
	err := ctx.ReadResource("commercetools:index/taxCategoryRate:TaxCategoryRate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaxCategoryRate resources.
type taxCategoryRateState struct {
	Amount          *float64                 `pulumi:"amount"`
	Country         *string                  `pulumi:"country"`
	IncludedInPrice *bool                    `pulumi:"includedInPrice"`
	Name            *string                  `pulumi:"name"`
	State           *string                  `pulumi:"state"`
	SubRates        []TaxCategoryRateSubRate `pulumi:"subRates"`
	TaxCategoryId   *string                  `pulumi:"taxCategoryId"`
}

type TaxCategoryRateState struct {
	Amount          pulumi.Float64PtrInput
	Country         pulumi.StringPtrInput
	IncludedInPrice pulumi.BoolPtrInput
	Name            pulumi.StringPtrInput
	State           pulumi.StringPtrInput
	SubRates        TaxCategoryRateSubRateArrayInput
	TaxCategoryId   pulumi.StringPtrInput
}

func (TaxCategoryRateState) ElementType() reflect.Type {
	return reflect.TypeOf((*taxCategoryRateState)(nil)).Elem()
}

type taxCategoryRateArgs struct {
	Amount          *float64                 `pulumi:"amount"`
	Country         string                   `pulumi:"country"`
	IncludedInPrice bool                     `pulumi:"includedInPrice"`
	Name            *string                  `pulumi:"name"`
	State           *string                  `pulumi:"state"`
	SubRates        []TaxCategoryRateSubRate `pulumi:"subRates"`
	TaxCategoryId   string                   `pulumi:"taxCategoryId"`
}

// The set of arguments for constructing a TaxCategoryRate resource.
type TaxCategoryRateArgs struct {
	Amount          pulumi.Float64PtrInput
	Country         pulumi.StringInput
	IncludedInPrice pulumi.BoolInput
	Name            pulumi.StringPtrInput
	State           pulumi.StringPtrInput
	SubRates        TaxCategoryRateSubRateArrayInput
	TaxCategoryId   pulumi.StringInput
}

func (TaxCategoryRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taxCategoryRateArgs)(nil)).Elem()
}
