// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TaxCategory struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	Key         pulumi.StringPtrOutput `pulumi:"key"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Version     pulumi.IntOutput       `pulumi:"version"`
}

// NewTaxCategory registers a new resource with the given unique name, arguments, and options.
func NewTaxCategory(ctx *pulumi.Context,
	name string, args *TaxCategoryArgs, opts ...pulumi.ResourceOption) (*TaxCategory, error) {
	if args == nil {
		args = &TaxCategoryArgs{}
	}
	var resource TaxCategory
	err := ctx.RegisterResource("commercetools:index/taxCategory:TaxCategory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaxCategory gets an existing TaxCategory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaxCategory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaxCategoryState, opts ...pulumi.ResourceOption) (*TaxCategory, error) {
	var resource TaxCategory
	err := ctx.ReadResource("commercetools:index/taxCategory:TaxCategory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaxCategory resources.
type taxCategoryState struct {
	Description *string `pulumi:"description"`
	Key         *string `pulumi:"key"`
	Name        *string `pulumi:"name"`
	Version     *int    `pulumi:"version"`
}

type TaxCategoryState struct {
	Description pulumi.StringPtrInput
	Key         pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Version     pulumi.IntPtrInput
}

func (TaxCategoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*taxCategoryState)(nil)).Elem()
}

type taxCategoryArgs struct {
	Description *string `pulumi:"description"`
	Key         *string `pulumi:"key"`
	Name        *string `pulumi:"name"`
}

// The set of arguments for constructing a TaxCategory resource.
type TaxCategoryArgs struct {
	Description pulumi.StringPtrInput
	Key         pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
}

func (TaxCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taxCategoryArgs)(nil)).Elem()
}
