// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CartDiscount struct {
	pulumi.CustomResourceState

	Description          pulumi.MapOutput            `pulumi:"description"`
	IsActive             pulumi.BoolPtrOutput        `pulumi:"isActive"`
	Key                  pulumi.StringPtrOutput      `pulumi:"key"`
	Name                 pulumi.MapOutput            `pulumi:"name"`
	Predicate            pulumi.StringOutput         `pulumi:"predicate"`
	RequiresDiscountCode pulumi.BoolPtrOutput        `pulumi:"requiresDiscountCode"`
	SortOrder            pulumi.StringOutput         `pulumi:"sortOrder"`
	StackingMode         pulumi.StringPtrOutput      `pulumi:"stackingMode"`
	Target               CartDiscountTargetPtrOutput `pulumi:"target"`
	ValidFrom            pulumi.StringPtrOutput      `pulumi:"validFrom"`
	ValidUntil           pulumi.StringPtrOutput      `pulumi:"validUntil"`
	Value                CartDiscountValueOutput     `pulumi:"value"`
	Version              pulumi.IntOutput            `pulumi:"version"`
}

// NewCartDiscount registers a new resource with the given unique name, arguments, and options.
func NewCartDiscount(ctx *pulumi.Context,
	name string, args *CartDiscountArgs, opts ...pulumi.ResourceOption) (*CartDiscount, error) {
	if args == nil || args.Predicate == nil {
		return nil, errors.New("missing required argument 'Predicate'")
	}
	if args == nil || args.SortOrder == nil {
		return nil, errors.New("missing required argument 'SortOrder'")
	}
	if args == nil || args.Value == nil {
		return nil, errors.New("missing required argument 'Value'")
	}
	if args == nil {
		args = &CartDiscountArgs{}
	}
	var resource CartDiscount
	err := ctx.RegisterResource("commercetools:index/cartDiscount:CartDiscount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCartDiscount gets an existing CartDiscount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCartDiscount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CartDiscountState, opts ...pulumi.ResourceOption) (*CartDiscount, error) {
	var resource CartDiscount
	err := ctx.ReadResource("commercetools:index/cartDiscount:CartDiscount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CartDiscount resources.
type cartDiscountState struct {
	Description          map[string]interface{} `pulumi:"description"`
	IsActive             *bool                  `pulumi:"isActive"`
	Key                  *string                `pulumi:"key"`
	Name                 map[string]interface{} `pulumi:"name"`
	Predicate            *string                `pulumi:"predicate"`
	RequiresDiscountCode *bool                  `pulumi:"requiresDiscountCode"`
	SortOrder            *string                `pulumi:"sortOrder"`
	StackingMode         *string                `pulumi:"stackingMode"`
	Target               *CartDiscountTarget    `pulumi:"target"`
	ValidFrom            *string                `pulumi:"validFrom"`
	ValidUntil           *string                `pulumi:"validUntil"`
	Value                *CartDiscountValue     `pulumi:"value"`
	Version              *int                   `pulumi:"version"`
}

type CartDiscountState struct {
	Description          pulumi.MapInput
	IsActive             pulumi.BoolPtrInput
	Key                  pulumi.StringPtrInput
	Name                 pulumi.MapInput
	Predicate            pulumi.StringPtrInput
	RequiresDiscountCode pulumi.BoolPtrInput
	SortOrder            pulumi.StringPtrInput
	StackingMode         pulumi.StringPtrInput
	Target               CartDiscountTargetPtrInput
	ValidFrom            pulumi.StringPtrInput
	ValidUntil           pulumi.StringPtrInput
	Value                CartDiscountValuePtrInput
	Version              pulumi.IntPtrInput
}

func (CartDiscountState) ElementType() reflect.Type {
	return reflect.TypeOf((*cartDiscountState)(nil)).Elem()
}

type cartDiscountArgs struct {
	Description          map[string]interface{} `pulumi:"description"`
	IsActive             *bool                  `pulumi:"isActive"`
	Key                  *string                `pulumi:"key"`
	Name                 map[string]interface{} `pulumi:"name"`
	Predicate            string                 `pulumi:"predicate"`
	RequiresDiscountCode *bool                  `pulumi:"requiresDiscountCode"`
	SortOrder            string                 `pulumi:"sortOrder"`
	StackingMode         *string                `pulumi:"stackingMode"`
	Target               *CartDiscountTarget    `pulumi:"target"`
	ValidFrom            *string                `pulumi:"validFrom"`
	ValidUntil           *string                `pulumi:"validUntil"`
	Value                CartDiscountValue      `pulumi:"value"`
}

// The set of arguments for constructing a CartDiscount resource.
type CartDiscountArgs struct {
	Description          pulumi.MapInput
	IsActive             pulumi.BoolPtrInput
	Key                  pulumi.StringPtrInput
	Name                 pulumi.MapInput
	Predicate            pulumi.StringInput
	RequiresDiscountCode pulumi.BoolPtrInput
	SortOrder            pulumi.StringInput
	StackingMode         pulumi.StringPtrInput
	Target               CartDiscountTargetPtrInput
	ValidFrom            pulumi.StringPtrInput
	ValidUntil           pulumi.StringPtrInput
	Value                CartDiscountValueInput
}

func (CartDiscountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cartDiscountArgs)(nil)).Elem()
}
