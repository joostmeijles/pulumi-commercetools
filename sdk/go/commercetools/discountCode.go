// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DiscountCode struct {
	pulumi.CustomResourceState

	CartDiscounts              pulumi.StringArrayOutput `pulumi:"cartDiscounts"`
	Code                       pulumi.StringOutput      `pulumi:"code"`
	Description                pulumi.MapOutput         `pulumi:"description"`
	Groups                     pulumi.StringArrayOutput `pulumi:"groups"`
	IsActive                   pulumi.BoolPtrOutput     `pulumi:"isActive"`
	MaxApplications            pulumi.IntPtrOutput      `pulumi:"maxApplications"`
	MaxApplicationsPerCustomer pulumi.IntPtrOutput      `pulumi:"maxApplicationsPerCustomer"`
	Name                       pulumi.MapOutput         `pulumi:"name"`
	Predicate                  pulumi.StringPtrOutput   `pulumi:"predicate"`
	ValidFrom                  pulumi.StringPtrOutput   `pulumi:"validFrom"`
	ValidUntil                 pulumi.StringPtrOutput   `pulumi:"validUntil"`
	Version                    pulumi.IntOutput         `pulumi:"version"`
}

// NewDiscountCode registers a new resource with the given unique name, arguments, and options.
func NewDiscountCode(ctx *pulumi.Context,
	name string, args *DiscountCodeArgs, opts ...pulumi.ResourceOption) (*DiscountCode, error) {
	if args == nil || args.CartDiscounts == nil {
		return nil, errors.New("missing required argument 'CartDiscounts'")
	}
	if args == nil || args.Code == nil {
		return nil, errors.New("missing required argument 'Code'")
	}
	if args == nil {
		args = &DiscountCodeArgs{}
	}
	var resource DiscountCode
	err := ctx.RegisterResource("commercetools:index/discountCode:DiscountCode", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscountCode gets an existing DiscountCode resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscountCode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscountCodeState, opts ...pulumi.ResourceOption) (*DiscountCode, error) {
	var resource DiscountCode
	err := ctx.ReadResource("commercetools:index/discountCode:DiscountCode", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscountCode resources.
type discountCodeState struct {
	CartDiscounts              []string               `pulumi:"cartDiscounts"`
	Code                       *string                `pulumi:"code"`
	Description                map[string]interface{} `pulumi:"description"`
	Groups                     []string               `pulumi:"groups"`
	IsActive                   *bool                  `pulumi:"isActive"`
	MaxApplications            *int                   `pulumi:"maxApplications"`
	MaxApplicationsPerCustomer *int                   `pulumi:"maxApplicationsPerCustomer"`
	Name                       map[string]interface{} `pulumi:"name"`
	Predicate                  *string                `pulumi:"predicate"`
	ValidFrom                  *string                `pulumi:"validFrom"`
	ValidUntil                 *string                `pulumi:"validUntil"`
	Version                    *int                   `pulumi:"version"`
}

type DiscountCodeState struct {
	CartDiscounts              pulumi.StringArrayInput
	Code                       pulumi.StringPtrInput
	Description                pulumi.MapInput
	Groups                     pulumi.StringArrayInput
	IsActive                   pulumi.BoolPtrInput
	MaxApplications            pulumi.IntPtrInput
	MaxApplicationsPerCustomer pulumi.IntPtrInput
	Name                       pulumi.MapInput
	Predicate                  pulumi.StringPtrInput
	ValidFrom                  pulumi.StringPtrInput
	ValidUntil                 pulumi.StringPtrInput
	Version                    pulumi.IntPtrInput
}

func (DiscountCodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*discountCodeState)(nil)).Elem()
}

type discountCodeArgs struct {
	CartDiscounts              []string               `pulumi:"cartDiscounts"`
	Code                       string                 `pulumi:"code"`
	Description                map[string]interface{} `pulumi:"description"`
	Groups                     []string               `pulumi:"groups"`
	IsActive                   *bool                  `pulumi:"isActive"`
	MaxApplications            *int                   `pulumi:"maxApplications"`
	MaxApplicationsPerCustomer *int                   `pulumi:"maxApplicationsPerCustomer"`
	Name                       map[string]interface{} `pulumi:"name"`
	Predicate                  *string                `pulumi:"predicate"`
	ValidFrom                  *string                `pulumi:"validFrom"`
	ValidUntil                 *string                `pulumi:"validUntil"`
}

// The set of arguments for constructing a DiscountCode resource.
type DiscountCodeArgs struct {
	CartDiscounts              pulumi.StringArrayInput
	Code                       pulumi.StringInput
	Description                pulumi.MapInput
	Groups                     pulumi.StringArrayInput
	IsActive                   pulumi.BoolPtrInput
	MaxApplications            pulumi.IntPtrInput
	MaxApplicationsPerCustomer pulumi.IntPtrInput
	Name                       pulumi.MapInput
	Predicate                  pulumi.StringPtrInput
	ValidFrom                  pulumi.StringPtrInput
	ValidUntil                 pulumi.StringPtrInput
}

func (DiscountCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discountCodeArgs)(nil)).Elem()
}
