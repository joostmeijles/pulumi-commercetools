// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiExtension struct {
	pulumi.CustomResourceState

	Destination ApiExtensionDestinationOutput  `pulumi:"destination"`
	Key         pulumi.StringPtrOutput         `pulumi:"key"`
	TimeoutInMs pulumi.IntPtrOutput            `pulumi:"timeoutInMs"`
	Triggers    ApiExtensionTriggerArrayOutput `pulumi:"triggers"`
	Version     pulumi.IntOutput               `pulumi:"version"`
}

// NewApiExtension registers a new resource with the given unique name, arguments, and options.
func NewApiExtension(ctx *pulumi.Context,
	name string, args *ApiExtensionArgs, opts ...pulumi.ResourceOption) (*ApiExtension, error) {
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	if args == nil || args.Triggers == nil {
		return nil, errors.New("missing required argument 'Triggers'")
	}
	if args == nil {
		args = &ApiExtensionArgs{}
	}
	var resource ApiExtension
	err := ctx.RegisterResource("commercetools:index/apiExtension:ApiExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiExtension gets an existing ApiExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiExtensionState, opts ...pulumi.ResourceOption) (*ApiExtension, error) {
	var resource ApiExtension
	err := ctx.ReadResource("commercetools:index/apiExtension:ApiExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiExtension resources.
type apiExtensionState struct {
	Destination *ApiExtensionDestination `pulumi:"destination"`
	Key         *string                  `pulumi:"key"`
	TimeoutInMs *int                     `pulumi:"timeoutInMs"`
	Triggers    []ApiExtensionTrigger    `pulumi:"triggers"`
	Version     *int                     `pulumi:"version"`
}

type ApiExtensionState struct {
	Destination ApiExtensionDestinationPtrInput
	Key         pulumi.StringPtrInput
	TimeoutInMs pulumi.IntPtrInput
	Triggers    ApiExtensionTriggerArrayInput
	Version     pulumi.IntPtrInput
}

func (ApiExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiExtensionState)(nil)).Elem()
}

type apiExtensionArgs struct {
	Destination ApiExtensionDestination `pulumi:"destination"`
	Key         *string                 `pulumi:"key"`
	TimeoutInMs *int                    `pulumi:"timeoutInMs"`
	Triggers    []ApiExtensionTrigger   `pulumi:"triggers"`
}

// The set of arguments for constructing a ApiExtension resource.
type ApiExtensionArgs struct {
	Destination ApiExtensionDestinationInput
	Key         pulumi.StringPtrInput
	TimeoutInMs pulumi.IntPtrInput
	Triggers    ApiExtensionTriggerArrayInput
}

func (ApiExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiExtensionArgs)(nil)).Elem()
}
