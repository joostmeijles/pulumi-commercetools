// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package commercetools

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ProjectSettings struct {
	pulumi.CustomResourceState

	Countries     pulumi.StringArrayOutput              `pulumi:"countries"`
	Currencies    pulumi.StringArrayOutput              `pulumi:"currencies"`
	ExternalOauth ProjectSettingsExternalOauthPtrOutput `pulumi:"externalOauth"`
	Key           pulumi.StringOutput                   `pulumi:"key"`
	Languages     pulumi.StringArrayOutput              `pulumi:"languages"`
	Messages      ProjectSettingsMessagesPtrOutput      `pulumi:"messages"`
	Name          pulumi.StringOutput                   `pulumi:"name"`
	Version       pulumi.IntOutput                      `pulumi:"version"`
}

// NewProjectSettings registers a new resource with the given unique name, arguments, and options.
func NewProjectSettings(ctx *pulumi.Context,
	name string, args *ProjectSettingsArgs, opts ...pulumi.ResourceOption) (*ProjectSettings, error) {
	if args == nil {
		args = &ProjectSettingsArgs{}
	}
	var resource ProjectSettings
	err := ctx.RegisterResource("commercetools:index/projectSettings:ProjectSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectSettings gets an existing ProjectSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectSettingsState, opts ...pulumi.ResourceOption) (*ProjectSettings, error) {
	var resource ProjectSettings
	err := ctx.ReadResource("commercetools:index/projectSettings:ProjectSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectSettings resources.
type projectSettingsState struct {
	Countries     []string                      `pulumi:"countries"`
	Currencies    []string                      `pulumi:"currencies"`
	ExternalOauth *ProjectSettingsExternalOauth `pulumi:"externalOauth"`
	Key           *string                       `pulumi:"key"`
	Languages     []string                      `pulumi:"languages"`
	Messages      *ProjectSettingsMessages      `pulumi:"messages"`
	Name          *string                       `pulumi:"name"`
	Version       *int                          `pulumi:"version"`
}

type ProjectSettingsState struct {
	Countries     pulumi.StringArrayInput
	Currencies    pulumi.StringArrayInput
	ExternalOauth ProjectSettingsExternalOauthPtrInput
	Key           pulumi.StringPtrInput
	Languages     pulumi.StringArrayInput
	Messages      ProjectSettingsMessagesPtrInput
	Name          pulumi.StringPtrInput
	Version       pulumi.IntPtrInput
}

func (ProjectSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectSettingsState)(nil)).Elem()
}

type projectSettingsArgs struct {
	Countries     []string                      `pulumi:"countries"`
	Currencies    []string                      `pulumi:"currencies"`
	ExternalOauth *ProjectSettingsExternalOauth `pulumi:"externalOauth"`
	Languages     []string                      `pulumi:"languages"`
	Messages      *ProjectSettingsMessages      `pulumi:"messages"`
	Name          *string                       `pulumi:"name"`
}

// The set of arguments for constructing a ProjectSettings resource.
type ProjectSettingsArgs struct {
	Countries     pulumi.StringArrayInput
	Currencies    pulumi.StringArrayInput
	ExternalOauth ProjectSettingsExternalOauthPtrInput
	Languages     pulumi.StringArrayInput
	Messages      ProjectSettingsMessagesPtrInput
	Name          pulumi.StringPtrInput
}

func (ProjectSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectSettingsArgs)(nil)).Elem()
}
